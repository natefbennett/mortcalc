# Poiss for JD:
NN <- matrix(rpois(M,lambda*dt),ncol=1)
# Assume lognormal jumps:
Z2 <- matrix(rnorm(M),ncol=1)
MM <- a*NN + b*sqrt(NN)*Z2
my.jumps[,i+1] <- MM
# Update:
X.JD[,i+1] <- X.JD[,i] + (mu - 0.5*sigma^2)*dt +
sigma*sqdt*Z + MM
X.GBM[,i+1] <- X.GBM[,i] + (mu - 0.5*sigma^2)*dt +
sigma*sqdt*Z
}
S.GBM <- exp(X.GBM)
S.JD <- exp(X.JD)
out <- list("GBM"=S.GBM,"JD"=S.JD,"J"=my.jumps)
return(out)
}
# -----------
S0 <- 50
N <- 252
r <- mu <- 0.1
sigma <- 0.4
a <- 0.05
b <- 0.1
lambda <- 7
M <- 10000
t <- 1
h <- 0.1
iter <- 100
# Finite diffs:
my.jd.naive <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
my.jd.crn <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
set.seed(ss)
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
h
#
# Jump diffusion:
myJD1 <- function(S0,M,N,mu,sigma,a,b,t,lambda){
# Initialize:
X.GBM <- X.JD <- my.jumps <-matrix(NA,ncol=N+1,nrow=M)
X.GBM[,1] <- log(S0)
X.JD[,1] <- log(S0)
dt <- t/N
sqdt <- sqrt(dt)
for (i in 1:N){
# Draw a common Z for GBM and JD:
Z <- matrix(rnorm(M),ncol=1)
# Poiss for JD:
NN <- matrix(rpois(M,lambda*dt),ncol=1)
# Assume lognormal jumps:
Z2 <- matrix(rnorm(M),ncol=1)
MM <- a*NN + b*sqrt(NN)*Z2
my.jumps[,i+1] <- MM
# Update:
X.JD[,i+1] <- X.JD[,i] + (mu - 0.5*sigma^2)*dt +
sigma*sqdt*Z + MM
X.GBM[,i+1] <- X.GBM[,i] + (mu - 0.5*sigma^2)*dt +
sigma*sqdt*Z
}
S.GBM <- exp(X.GBM)
S.JD <- exp(X.JD)
out <- list("GBM"=S.GBM,"JD"=S.JD,"J"=my.jumps)
return(out)
}
# -----------
S0 <- 50
N <- 52
r <- mu <- 0.1
sigma <- 0.4
a <- 0.05
b <- 0.1
lambda <- 7
M <- 1000
t <- 1
h <- 0.1
iter <- 100
# Finite diffs:
my.jd.naive <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
my.jd.crn <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
set.seed(ss)
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
iter
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
message(print(iter))
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
message(print(i))
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
out.jd
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
if(i%%10==0){message(print(i))}
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
M <- 10000
t <- 1
h <- 0.1
iter <- 100
# Finite diffs:
my.jd.naive <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
my.jd.crn <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
set.seed(ss)
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
if(i%%10==0){message(print(i))}
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
# -----------
S0 <- 50
N <- 52
r <- mu <- 0.1
sigma <- 0.4
a <- 0.0
b <- 0.1
lambda <- 0
M <- 1000
t <- 1
h <- 0.1
iter <- 100
# Finite diffs:
my.jd.naive <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
my.jd.crn <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
set.seed(ss)
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
if(i%%10==0){message(print(i))}
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
#
# Jump diffusion:
myJD1 <- function(S0,M,N,mu,sigma,a,b,t,lambda){
# Initialize:
X.GBM <- X.JD <- my.jumps <-matrix(NA,ncol=N+1,nrow=M)
X.GBM[,1] <- log(S0)
X.JD[,1] <- log(S0)
dt <- t/N
sqdt <- sqrt(dt)
for (i in 1:N){
# Draw a common Z for GBM and JD:
Z <- matrix(rnorm(M),ncol=1)
# Poiss for JD:
NN <- matrix(rpois(M,lambda*dt),ncol=1)
# Assume lognormal jumps:
Z2 <- matrix(rnorm(M),ncol=1)
MM <- a*NN + b*sqrt(NN)*Z2
my.jumps[,i+1] <- MM
# Update:
X.JD[,i+1] <- X.JD[,i] + (mu - 0.5*sigma^2)*dt +
sigma*sqdt*Z + MM
X.GBM[,i+1] <- X.GBM[,i] + (mu - 0.5*sigma^2)*dt +
sigma*sqdt*Z
}
S.GBM <- exp(X.GBM)
S.JD <- exp(X.JD)
out <- list("GBM"=S.GBM,"JD"=S.JD,"J"=my.jumps)
return(out)
}
# -----------
S0 <- 50
N <- 52
r <- mu <- 0.1
sigma <- 0.4
a <- 0.0
b <- 0.0
lambda <- 0
M <- 1000
t <- 1
h <- 0.1
iter <- 100
# true delta:
d1 <- (log(S0/K) + (r + sigma^2/2)*t)/(sigma*sqrt(t))
delta.true <- rep(pnorm(d1),n)
vega.true <- rep(S0*dnorm(d1)*t,n)
# Finite diffs:
my.jd.naive <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
my.jd.crn <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
set.seed(ss)
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
if(i%%10==0){message(print(i))}
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
delta.true
K
# -----------
S0 <- 50
K <- 52
N <- 52
r <- mu <- 0.1
sigma <- 0.4
a <- 0.0
b <- 0.0
lambda <- 0
M <- 1000
t <- 1
h <- 0.1
iter <- 100
# true delta:
d1 <- (log(S0/K) + (r + sigma^2/2)*t)/(sigma*sqrt(t))
delta.true <- rep(pnorm(d1),n)
vega.true <- rep(S0*dnorm(d1)*t,n)
# Finite diffs:
my.jd.naive <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
my.jd.crn <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
set.seed(ss)
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,n+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
if(i%%10==0){message(print(i))}
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
# -----------
S0 <- 50
K <- 52
N <- 52
r <- mu <- 0.1
sigma <- 0.4
a <- 0.0
b <- 0.0
lambda <- 0
M <- 1000
t <- 1
h <- 0.1
iter <- 100
# true delta:
d1 <- (log(S0/K) + (r + sigma^2/2)*t)/(sigma*sqrt(t))
delta.true <- rep(pnorm(d1),n)
vega.true <- rep(S0*dnorm(d1)*t,n)
# Finite diffs:
my.jd.naive <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
my.jd.crn <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$GBM[,n+1]
set.seed(ss)
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$GBM[,n+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
if(i%%10==0){message(print(i))}
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
n
# -----------
S0 <- 50
K <- 52
N <- 52
r <- mu <- 0.1
sigma <- 0.4
a <- 0.0
b <- 0.0
lambda <- 0
M <- 1000
t <- 1
h <- 0.1
iter <- 100
# true delta:
d1 <- (log(S0/K) + (r + sigma^2/2)*t)/(sigma*sqrt(t))
delta.true <- rep(pnorm(d1),n)
vega.true <- rep(S0*dnorm(d1)*t,n)
# Finite diffs:
my.jd.naive <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
my.jd.crn <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
set.seed(ss)
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
if(i%%10==0){message(print(i))}
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
# -----------
S0 <- 50
K <- 52
N <- 52
r <- mu <- 0.1
sigma <- 0.4
a <- 0.0
b <- 0.1
lambda <- 7
M <- 1000
t <- 1
h <- 0.1
iter <- 100
# true delta:
d1 <- (log(S0/K) + (r + sigma^2/2)*t)/(sigma*sqrt(t))
delta.true <- rep(pnorm(d1),n)
vega.true <- rep(S0*dnorm(d1)*t,n)
# Finite diffs:
my.jd.naive <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
my.jd.crn <- function(M,N,t,r,S0,K,sigma,ss=1,lambda,a,b,h=1){
set.seed(ss)
ST <- myJD1(S0,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
set.seed(ss)
STh <- myJD1(S0+h,M,N,mu,sigma,a,b,t,lambda)$JD[,N+1]
f0 <- f(ST,K)
f0h <- f(STh,K)
fd <- exp(-r*t)*mean((f0h - f0) / h)
}
out.jd <- as.data.frame(matrix(NA,ncol=2,nrow=iter))
for (i in 1:iter){
if(i%%10==0){message(print(i))}
ss <- sample(100000000,1)
out.jd[i,1] <- my.jd.naive(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
out.jd[i,2] <- my.jd.crn(M,N,t,r,S0,K,sigma,ss,lambda,a,b,h)
}
hist(out.jd[,1],20)
hist(out.jd[,2],20)
sprintf("Mean Naive:    %3.2f (%5.4f)",mean(out.jd[,1]),sd(out.jd[,1]))
sprintf("Mean CRN:      %3.2f (%5.4f)",mean(out.jd[,2]),sd(out.jd[,2]))
sprintf("Black Scholes: %3.2f",delta.true)
rm(list=ls())
# Generate data:
df <- as.data.frame(matrix(NA,ncol=6,nrow=5000))
dim(df)
shiny::runApp('Classes/Service/FinEd/App-1')
runApp('Classes/Service/FinEd/Plot-App')
shiny::runApp()
runApp()
runApp('~/Classes/Service/FinEd/Mort-App')
